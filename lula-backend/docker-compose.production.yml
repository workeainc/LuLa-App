version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:6.0
    container_name: lula-mongodb-prod
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE}
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
      - ./backups:/backups
    networks:
      - lula-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: lula-redis-prod
    restart: unless-stopped
    volumes:
      - redis_data:/data
    networks:
      - lula-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Lula Backend API
  backend:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: lula-backend-prod
    restart: unless-stopped
    env_file:
      - .env.production
    environment:
      NODE_ENV: production
      PORT: 5000
      MONGODB_URI: mongodb://${MONGO_ROOT_USERNAME}:${MONGO_ROOT_PASSWORD}@mongodb:27017/${MONGO_DATABASE}?authSource=admin
      REDIS_URL: redis://redis:6379
    ports:
      - "5002:5000"
    volumes:
      - ./logs:/app/logs
      - ./uploads:/app/uploads
    depends_on:
      - mongodb
      - redis
    networks:
      - lula-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:5000/api/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # User App Frontend
  user-app:
    build: 
      context: ../user-app
      dockerfile: Dockerfile
    container_name: lula-user-app-prod
    restart: unless-stopped
    ports:
      - "19006:19006"
    environment:
      - NODE_ENV=production
      - EXPO_DEVTOOLS_LISTEN_ADDRESS=0.0.0.0
    networks:
      - lula-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Streamer App Frontend
  streamer-app:
    build: 
      context: ../streamer-app
      dockerfile: Dockerfile
    container_name: lula-streamer-app-prod
    restart: unless-stopped
    ports:
      - "19007:19007"
    environment:
      - NODE_ENV=production
      - EXPO_DEVTOOLS_LISTEN_ADDRESS=0.0.0.0
    networks:
      - lula-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Admin App Frontend
  admin-app:
    build: 
      context: ../lula-admin/lula-admin
      dockerfile: Dockerfile
    container_name: lula-admin-app-prod
    restart: unless-stopped
    ports:
      - "19008:5173"
    environment:
      - NODE_ENV=production
      - VITE_BACKEND_URL=https://api.yourdomain.com
    networks:
      - lula-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: lula-nginx-prod
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx-production.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - backend
      - user-app
      - streamer-app
      - admin-app
    networks:
      - lula-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local
  nginx_logs:
    driver: local

networks:
  lula-network:
    driver: bridge
