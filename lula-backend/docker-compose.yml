services:
  # MongoDB Database
  mongodb:
    image: mongo:6.0
    container_name: lula-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-password}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE:-lula}
    ports:
      - "27019:27017"
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - lula-network

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: lula-redis
    restart: unless-stopped
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data
    networks:
      - lula-network

  # Lula Backend API
  backend:
    build: .
    container_name: lula-backend
    restart: unless-stopped
    env_file:
      - env.docker
    environment:
      NODE_ENV: production
      PORT: 5000
      MONGODB_URI: mongodb://${MONGO_ROOT_USERNAME:-admin}:${MONGO_ROOT_PASSWORD:-password}@mongodb:27017/${MONGO_DATABASE:-lula}?authSource=admin
      REDIS_URL: redis://redis:6379
    ports:
      - "5002:5000"
    volumes:
      - ./logs:/app/logs
    depends_on:
      - mongodb
      - redis
    networks:
      - lula-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:5000/api/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # User App Frontend
  user-app:
    build: ../user-app
    container_name: lula-user-app
    restart: unless-stopped
    ports:
      - "19006:19006"
    environment:
      - NODE_ENV=production
      - EXPO_DEVTOOLS_LISTEN_ADDRESS=0.0.0.0
    networks:
      - lula-network

  # Streamer App Frontend
  streamer-app:
    build: ../streamer-app
    container_name: lula-streamer-app
    restart: unless-stopped
    ports:
      - "19007:19007"
    environment:
      - NODE_ENV=production
      - EXPO_DEVTOOLS_LISTEN_ADDRESS=0.0.0.0
    networks:
      - lula-network

  # Admin App Frontend
  admin-app:
    build: ../lula-admin/lula-admin
    container_name: lula-admin-app
    restart: unless-stopped
    ports:
      - "19008:5173"
    environment:
      - NODE_ENV=production
      - VITE_BACKEND_URL=http://localhost:5002
    networks:
      - lula-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: lula-nginx
    restart: unless-stopped
    ports:
      - "8080:80"
      - "8443:443"
    volumes:
      - ./nginx-simple.conf:/etc/nginx/nginx.conf:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - backend
      - user-app
      - streamer-app
      - admin-app
    networks:
      - lula-network

volumes:
  mongodb_data:
  redis_data:
  nginx_logs:

networks:
  lula-network:
    driver: bridge
