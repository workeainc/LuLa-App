version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:6.0
    container_name: lula-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-password}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE:-lula}
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./lula-backend/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - lula-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: lula-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - lula-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Lula Backend API
  backend:
    build: ./lula-backend
    container_name: lula-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 5000
      MONGODB_URI: mongodb://${MONGO_ROOT_USERNAME:-admin}:${MONGO_ROOT_PASSWORD:-password}@mongodb:27017/${MONGO_DATABASE:-lula}?authSource=admin
      REDIS_URL: redis://redis:6379
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key-change-this-in-production}
      JWT_EXPIRE: 7d
      STREAM_API_KEY: ${STREAM_API_KEY:-d9haf5vcbwwp}
      STREAM_API_SECRET: ${STREAM_API_SECRET:-your-stream-api-secret-here}
    ports:
      - "5000:5000"
    volumes:
      - ./lula-backend/logs:/app/logs
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - lula-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:5000/api/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Admin App Frontend
  admin-app:
    build: ./lula-admin/lula-admin
    container_name: lula-admin-app
    restart: unless-stopped
    environment:
      NODE_ENV: production
      VITE_BACKEND_URL: http://localhost:5000
    ports:
      - "3002:5173"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - lula-network

  # User App Web Version
  user-app-web:
    build: 
      context: ./user-app
      dockerfile: Dockerfile.web
    container_name: lula-user-app-web
    restart: unless-stopped
    environment:
      NODE_ENV: production
      EXPO_PUBLIC_API_URL: http://localhost:5000/api
      EXPO_PUBLIC_WS_URL: ws://localhost:5000
    ports:
      - "3003:19006"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - lula-network

  # Streamer App Web Version
  streamer-app-web:
    build: 
      context: ./streamer-app
      dockerfile: Dockerfile.web
    container_name: lula-streamer-app-web
    restart: unless-stopped
    environment:
      NODE_ENV: production
      EXPO_PUBLIC_API_URL: http://localhost:5000/api
      EXPO_PUBLIC_WS_URL: ws://localhost:5000
    ports:
      - "3004:19007"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - lula-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: lula-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx-simple.conf:/etc/nginx/nginx.conf:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      backend:
        condition: service_healthy
      admin-app:
        condition: service_started
      user-app-web:
        condition: service_started
      streamer-app-web:
        condition: service_started
    networks:
      - lula-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local
  nginx_logs:
    driver: local

networks:
  lula-network:
    driver: bridge
